
ultraSonic_ATmega328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000005e0  00000674  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800100  00800100  00000674  2**0
                  ALLOC
  3 .stab         00001b60  00000000  00000000  00000674  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000768  00000000  00000000  000021d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000293c  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000058  00000000  00000000  0000296b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000029c  00000000  00000000  000029c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000014e  00000000  00000000  00002c5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000240  00000000  00000000  00002dad  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000104  00000000  00000000  00002ff0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000001cc  00000000  00000000  000030f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000150  00000000  00000000  000032c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000048  00000000  00000000  00003410  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 dd 00 	jmp	0x1ba	; 0x1ba <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 6d 00 	jmp	0xda	; 0xda <__vector_5>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 31       	cpi	r26, 0x14	; 20
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 13 01 	call	0x226	; 0x226 <main>
  88:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_16>:
		}
	}
}
//INTERRUPTS:
ISR(TIMER0_OVF_vect)
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
  9e:	af 93       	push	r26
  a0:	bf 93       	push	r27
	//Get Here Every 1ms
	/*USAGE:
	1.Used in measuring the time of being the echo pin high
	
	*/
	OVF_Counter++;				//To know The number of overflow times
  a2:	80 91 08 01 	lds	r24, 0x0108
  a6:	90 91 09 01 	lds	r25, 0x0109
  aa:	a0 91 0a 01 	lds	r26, 0x010A
  ae:	b0 91 0b 01 	lds	r27, 0x010B
  b2:	01 96       	adiw	r24, 0x01	; 1
  b4:	a1 1d       	adc	r26, r1
  b6:	b1 1d       	adc	r27, r1
  b8:	80 93 08 01 	sts	0x0108, r24
  bc:	90 93 09 01 	sts	0x0109, r25
  c0:	a0 93 0a 01 	sts	0x010A, r26
  c4:	b0 93 0b 01 	sts	0x010B, r27
	
	
}
  c8:	bf 91       	pop	r27
  ca:	af 91       	pop	r26
  cc:	9f 91       	pop	r25
  ce:	8f 91       	pop	r24
  d0:	0f 90       	pop	r0
  d2:	0f be       	out	0x3f, r0	; 63
  d4:	0f 90       	pop	r0
  d6:	1f 90       	pop	r1
  d8:	18 95       	reti

000000da <__vector_5>:
ISR(PCINT2_vect)
{
  da:	1f 92       	push	r1
  dc:	0f 92       	push	r0
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	0f 92       	push	r0
  e2:	11 24       	eor	r1, r1
  e4:	2f 93       	push	r18
  e6:	3f 93       	push	r19
  e8:	4f 93       	push	r20
  ea:	5f 93       	push	r21
  ec:	6f 93       	push	r22
  ee:	7f 93       	push	r23
  f0:	8f 93       	push	r24
  f2:	9f 93       	push	r25
  f4:	af 93       	push	r26
  f6:	bf 93       	push	r27
  f8:	ef 93       	push	r30
	if(state==0)  //Check For Rising Edge "which means that echo pin start to receive the wave
  fa:	80 91 06 01 	lds	r24, 0x0106
  fe:	90 91 07 01 	lds	r25, 0x0107
 102:	89 2b       	or	r24, r25
 104:	11 f5       	brne	.+68     	; 0x14a <__vector_5+0x70>
	{
		state=1;
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	90 93 07 01 	sts	0x0107, r25
 10e:	80 93 06 01 	sts	0x0106, r24
		Start_Reciv=(OVF_Counter*255)+TCNT0;
 112:	20 91 08 01 	lds	r18, 0x0108
 116:	30 91 09 01 	lds	r19, 0x0109
 11a:	40 91 0a 01 	lds	r20, 0x010A
 11e:	50 91 0b 01 	lds	r21, 0x010B
 122:	e6 b5       	in	r30, 0x26	; 38
 124:	af ef       	ldi	r26, 0xFF	; 255
 126:	b0 e0       	ldi	r27, 0x00	; 0
 128:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__muluhisi3>
 12c:	dc 01       	movw	r26, r24
 12e:	cb 01       	movw	r24, r22
 130:	8e 0f       	add	r24, r30
 132:	91 1d       	adc	r25, r1
 134:	a1 1d       	adc	r26, r1
 136:	b1 1d       	adc	r27, r1
 138:	80 93 10 01 	sts	0x0110, r24
 13c:	90 93 11 01 	sts	0x0111, r25
 140:	a0 93 12 01 	sts	0x0112, r26
 144:	b0 93 13 01 	sts	0x0113, r27
 148:	28 c0       	rjmp	.+80     	; 0x19a <__vector_5+0xc0>
		//tbi(PORTB,PB0);
	}
	else		//Check For Falling Edge "which means that echo pin Finishing Receiving
	{
		state=0;
 14a:	10 92 07 01 	sts	0x0107, r1
 14e:	10 92 06 01 	sts	0x0106, r1
		End_Reciv=(OVF_Counter*255)+TCNT0;
 152:	20 91 08 01 	lds	r18, 0x0108
 156:	30 91 09 01 	lds	r19, 0x0109
 15a:	40 91 0a 01 	lds	r20, 0x010A
 15e:	50 91 0b 01 	lds	r21, 0x010B
 162:	e6 b5       	in	r30, 0x26	; 38
 164:	af ef       	ldi	r26, 0xFF	; 255
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__muluhisi3>
 16c:	dc 01       	movw	r26, r24
 16e:	cb 01       	movw	r24, r22
 170:	8e 0f       	add	r24, r30
 172:	91 1d       	adc	r25, r1
 174:	a1 1d       	adc	r26, r1
 176:	b1 1d       	adc	r27, r1
 178:	80 93 0c 01 	sts	0x010C, r24
 17c:	90 93 0d 01 	sts	0x010D, r25
 180:	a0 93 0e 01 	sts	0x010E, r26
 184:	b0 93 0f 01 	sts	0x010F, r27
		TCNT0=0;
 188:	16 bc       	out	0x26, r1	; 38
		OVF_Counter=0;
 18a:	10 92 08 01 	sts	0x0108, r1
 18e:	10 92 09 01 	sts	0x0109, r1
 192:	10 92 0a 01 	sts	0x010A, r1
 196:	10 92 0b 01 	sts	0x010B, r1
		//tbi(PORTC,PC5);
	}
}
 19a:	ef 91       	pop	r30
 19c:	bf 91       	pop	r27
 19e:	af 91       	pop	r26
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	7f 91       	pop	r23
 1a6:	6f 91       	pop	r22
 1a8:	5f 91       	pop	r21
 1aa:	4f 91       	pop	r20
 1ac:	3f 91       	pop	r19
 1ae:	2f 91       	pop	r18
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <__vector_1>:

ISR(INT0_vect)
{
 1ba:	1f 92       	push	r1
 1bc:	0f 92       	push	r0
 1be:	0f b6       	in	r0, 0x3f	; 63
 1c0:	0f 92       	push	r0
 1c2:	11 24       	eor	r1, r1
	
}
 1c4:	0f 90       	pop	r0
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	0f 90       	pop	r0
 1ca:	1f 90       	pop	r1
 1cc:	18 95       	reti

000001ce <init_ultrasonic>:
//=======================
void init_ultrasonic()
{
	sbi(DDRD,trig_pin_front);
 1ce:	54 9a       	sbi	0x0a, 4	; 10
	cbi(PORTD,trig_pin_front);
 1d0:	5c 98       	cbi	0x0b, 4	; 11
	cbi(DDRD,echo_pin_front);
 1d2:	55 98       	cbi	0x0a, 5	; 10
	cbi(PORTD,echo_pin_front);
 1d4:	5d 98       	cbi	0x0b, 5	; 11
 1d6:	08 95       	ret

000001d8 <init_timer0>:
}
void init_timer0()
{
	//Initialize Timer0 with Normal mode and its tick 'll be occurred every 4 micro seconds
	sbi(TCCR0B,CS00); 		//PREscaler 64
 1d8:	85 b5       	in	r24, 0x25	; 37
 1da:	81 60       	ori	r24, 0x01	; 1
 1dc:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B,CS01);
 1de:	85 b5       	in	r24, 0x25	; 37
 1e0:	82 60       	ori	r24, 0x02	; 2
 1e2:	85 bd       	out	0x25, r24	; 37
	sbi(TIMSK0,TOIE0);		//enable overflow interrupt
 1e4:	ee e6       	ldi	r30, 0x6E	; 110
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	81 60       	ori	r24, 0x01	; 1
 1ec:	80 83       	st	Z, r24
 1ee:	08 95       	ret

000001f0 <init_ext_interrupts>:
	
}

void init_ext_interrupts()
{
	sbi(EICRA,ISC00);			//set trigger INT0 for Logical change mode
 1f0:	e9 e6       	ldi	r30, 0x69	; 105
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	81 60       	ori	r24, 0x01	; 1
 1f8:	80 83       	st	Z, r24
	sbi(EICRA,ISC01);
 1fa:	80 81       	ld	r24, Z
 1fc:	82 60       	ori	r24, 0x02	; 2
 1fe:	80 83       	st	Z, r24
	sbi(EIMSK,INT0);			//turn on INT0
 200:	e8 9a       	sbi	0x1d, 0	; 29
	sbi(PCICR,PCIE2);			//enable interrupt on pin change for pins{16:23}
 202:	e8 e6       	ldi	r30, 0x68	; 104
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	84 60       	ori	r24, 0x04	; 4
 20a:	80 83       	st	Z, r24
	sbi(PCMSK2,PCINT21);		//choose pin PD7 for trigger the interrupt
 20c:	ed e6       	ldi	r30, 0x6D	; 109
 20e:	f0 e0       	ldi	r31, 0x00	; 0
 210:	80 81       	ld	r24, Z
 212:	80 62       	ori	r24, 0x20	; 32
 214:	80 83       	st	Z, r24
 216:	08 95       	ret

00000218 <sonar>:
	//EIMSK|=(1<<INT1);			//turn on INT1
}

void sonar()
{
	sbi(PORTD,trig_pin_front);
 218:	5c 9a       	sbi	0x0b, 4	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21a:	85 e3       	ldi	r24, 0x35	; 53
 21c:	8a 95       	dec	r24
 21e:	f1 f7       	brne	.-4      	; 0x21c <sonar+0x4>
 220:	00 00       	nop
	_delay_us(10);
	cbi(PORTD,trig_pin_front);
 222:	5c 98       	cbi	0x0b, 4	; 11
 224:	08 95       	ret

00000226 <main>:


int main(void)
{
	//For Indication
	sbi(DDRB,PB0);
 226:	20 9a       	sbi	0x04, 0	; 4
	cbi(PORTB,PB0);
 228:	28 98       	cbi	0x05, 0	; 5
	sbi(DDRC,PC5);
 22a:	3d 9a       	sbi	0x07, 5	; 7
	cbi(PORTC,PC5);
 22c:	45 98       	cbi	0x08, 5	; 8
	
	init_ultrasonic();
 22e:	0e 94 e7 00 	call	0x1ce	; 0x1ce <init_ultrasonic>
	init_timer0();
 232:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <init_timer0>
	init_ext_interrupts();
 236:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <init_ext_interrupts>
	sei();
 23a:	78 94       	sei
    while(1)
    {
		sonar();
 23c:	0e 94 0c 01 	call	0x218	; 0x218 <sonar>
        DeltaT=(End_Reciv-Start_Reciv);
 240:	40 91 0c 01 	lds	r20, 0x010C
 244:	50 91 0d 01 	lds	r21, 0x010D
 248:	60 91 0e 01 	lds	r22, 0x010E
 24c:	70 91 0f 01 	lds	r23, 0x010F
 250:	80 91 10 01 	lds	r24, 0x0110
 254:	90 91 11 01 	lds	r25, 0x0111
 258:	a0 91 12 01 	lds	r26, 0x0112
 25c:	b0 91 13 01 	lds	r27, 0x0113
 260:	48 1b       	sub	r20, r24
 262:	59 0b       	sbc	r21, r25
 264:	50 93 05 01 	sts	0x0105, r21
 268:	40 93 04 01 	sts	0x0104, r20
		echo_Time=(DeltaT*4);				//(the difference between the beginning of the echo pulse and the end of it) multiplied by 4 microseconds 
 26c:	80 91 04 01 	lds	r24, 0x0104
 270:	90 91 05 01 	lds	r25, 0x0105
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	90 93 03 01 	sts	0x0103, r25
 280:	80 93 02 01 	sts	0x0102, r24
		Distance=ceil(echo_Time/58.0);
 284:	60 91 02 01 	lds	r22, 0x0102
 288:	70 91 03 01 	lds	r23, 0x0103
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 09 02 	call	0x412	; 0x412 <__floatunsisf>
 294:	20 e0       	ldi	r18, 0x00	; 0
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	48 e6       	ldi	r20, 0x68	; 104
 29a:	52 e4       	ldi	r21, 0x42	; 66
 29c:	0e 94 75 01 	call	0x2ea	; 0x2ea <__divsf3>
 2a0:	0e 94 62 01 	call	0x2c4	; 0x2c4 <ceil>
 2a4:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__fixunssfsi>
 2a8:	70 93 01 01 	sts	0x0101, r23
 2ac:	60 93 00 01 	sts	0x0100, r22
		if(Distance>20)
 2b0:	80 91 00 01 	lds	r24, 0x0100
 2b4:	90 91 01 01 	lds	r25, 0x0101
 2b8:	45 97       	sbiw	r24, 0x15	; 21
 2ba:	10 f0       	brcs	.+4      	; 0x2c0 <main+0x9a>
		{
			sbi(PORTB,PB0);
 2bc:	28 9a       	sbi	0x05, 0	; 5
 2be:	be cf       	rjmp	.-132    	; 0x23c <main+0x16>
		}
		else
		{
			cbi(PORTB,PB0);
 2c0:	28 98       	cbi	0x05, 0	; 5
 2c2:	bc cf       	rjmp	.-136    	; 0x23c <main+0x16>

000002c4 <ceil>:
 2c4:	56 d1       	rcall	.+684    	; 0x572 <__fp_trunc>
 2c6:	80 f0       	brcs	.+32     	; 0x2e8 <ceil+0x24>
 2c8:	9f 37       	cpi	r25, 0x7F	; 127
 2ca:	40 f4       	brcc	.+16     	; 0x2dc <ceil+0x18>
 2cc:	91 11       	cpse	r25, r1
 2ce:	0e f4       	brtc	.+2      	; 0x2d2 <ceil+0xe>
 2d0:	68 c1       	rjmp	.+720    	; 0x5a2 <__fp_szero>
 2d2:	60 e0       	ldi	r22, 0x00	; 0
 2d4:	70 e0       	ldi	r23, 0x00	; 0
 2d6:	80 e8       	ldi	r24, 0x80	; 128
 2d8:	9f e3       	ldi	r25, 0x3F	; 63
 2da:	08 95       	ret
 2dc:	26 f0       	brts	.+8      	; 0x2e6 <ceil+0x22>
 2de:	1b 16       	cp	r1, r27
 2e0:	61 1d       	adc	r22, r1
 2e2:	71 1d       	adc	r23, r1
 2e4:	81 1d       	adc	r24, r1
 2e6:	d8 c0       	rjmp	.+432    	; 0x498 <__fp_mintl>
 2e8:	f2 c0       	rjmp	.+484    	; 0x4ce <__fp_mpack>

000002ea <__divsf3>:
 2ea:	0c d0       	rcall	.+24     	; 0x304 <__divsf3x>
 2ec:	0f c1       	rjmp	.+542    	; 0x50c <__fp_round>
 2ee:	07 d1       	rcall	.+526    	; 0x4fe <__fp_pscB>
 2f0:	40 f0       	brcs	.+16     	; 0x302 <__divsf3+0x18>
 2f2:	fe d0       	rcall	.+508    	; 0x4f0 <__fp_pscA>
 2f4:	30 f0       	brcs	.+12     	; 0x302 <__divsf3+0x18>
 2f6:	21 f4       	brne	.+8      	; 0x300 <__divsf3+0x16>
 2f8:	5f 3f       	cpi	r21, 0xFF	; 255
 2fa:	19 f0       	breq	.+6      	; 0x302 <__divsf3+0x18>
 2fc:	c7 c0       	rjmp	.+398    	; 0x48c <__fp_inf>
 2fe:	51 11       	cpse	r21, r1
 300:	50 c1       	rjmp	.+672    	; 0x5a2 <__fp_szero>
 302:	f3 c0       	rjmp	.+486    	; 0x4ea <__fp_nan>

00000304 <__divsf3x>:
 304:	14 d1       	rcall	.+552    	; 0x52e <__fp_split3>
 306:	98 f3       	brcs	.-26     	; 0x2ee <__divsf3+0x4>

00000308 <__divsf3_pse>:
 308:	99 23       	and	r25, r25
 30a:	c9 f3       	breq	.-14     	; 0x2fe <__divsf3+0x14>
 30c:	55 23       	and	r21, r21
 30e:	b1 f3       	breq	.-20     	; 0x2fc <__divsf3+0x12>
 310:	95 1b       	sub	r25, r21
 312:	55 0b       	sbc	r21, r21
 314:	bb 27       	eor	r27, r27
 316:	aa 27       	eor	r26, r26
 318:	62 17       	cp	r22, r18
 31a:	73 07       	cpc	r23, r19
 31c:	84 07       	cpc	r24, r20
 31e:	38 f0       	brcs	.+14     	; 0x32e <__divsf3_pse+0x26>
 320:	9f 5f       	subi	r25, 0xFF	; 255
 322:	5f 4f       	sbci	r21, 0xFF	; 255
 324:	22 0f       	add	r18, r18
 326:	33 1f       	adc	r19, r19
 328:	44 1f       	adc	r20, r20
 32a:	aa 1f       	adc	r26, r26
 32c:	a9 f3       	breq	.-22     	; 0x318 <__divsf3_pse+0x10>
 32e:	33 d0       	rcall	.+102    	; 0x396 <__divsf3_pse+0x8e>
 330:	0e 2e       	mov	r0, r30
 332:	3a f0       	brmi	.+14     	; 0x342 <__divsf3_pse+0x3a>
 334:	e0 e8       	ldi	r30, 0x80	; 128
 336:	30 d0       	rcall	.+96     	; 0x398 <__divsf3_pse+0x90>
 338:	91 50       	subi	r25, 0x01	; 1
 33a:	50 40       	sbci	r21, 0x00	; 0
 33c:	e6 95       	lsr	r30
 33e:	00 1c       	adc	r0, r0
 340:	ca f7       	brpl	.-14     	; 0x334 <__divsf3_pse+0x2c>
 342:	29 d0       	rcall	.+82     	; 0x396 <__divsf3_pse+0x8e>
 344:	fe 2f       	mov	r31, r30
 346:	27 d0       	rcall	.+78     	; 0x396 <__divsf3_pse+0x8e>
 348:	66 0f       	add	r22, r22
 34a:	77 1f       	adc	r23, r23
 34c:	88 1f       	adc	r24, r24
 34e:	bb 1f       	adc	r27, r27
 350:	26 17       	cp	r18, r22
 352:	37 07       	cpc	r19, r23
 354:	48 07       	cpc	r20, r24
 356:	ab 07       	cpc	r26, r27
 358:	b0 e8       	ldi	r27, 0x80	; 128
 35a:	09 f0       	breq	.+2      	; 0x35e <__divsf3_pse+0x56>
 35c:	bb 0b       	sbc	r27, r27
 35e:	80 2d       	mov	r24, r0
 360:	bf 01       	movw	r22, r30
 362:	ff 27       	eor	r31, r31
 364:	93 58       	subi	r25, 0x83	; 131
 366:	5f 4f       	sbci	r21, 0xFF	; 255
 368:	2a f0       	brmi	.+10     	; 0x374 <__divsf3_pse+0x6c>
 36a:	9e 3f       	cpi	r25, 0xFE	; 254
 36c:	51 05       	cpc	r21, r1
 36e:	68 f0       	brcs	.+26     	; 0x38a <__divsf3_pse+0x82>
 370:	8d c0       	rjmp	.+282    	; 0x48c <__fp_inf>
 372:	17 c1       	rjmp	.+558    	; 0x5a2 <__fp_szero>
 374:	5f 3f       	cpi	r21, 0xFF	; 255
 376:	ec f3       	brlt	.-6      	; 0x372 <__divsf3_pse+0x6a>
 378:	98 3e       	cpi	r25, 0xE8	; 232
 37a:	dc f3       	brlt	.-10     	; 0x372 <__divsf3_pse+0x6a>
 37c:	86 95       	lsr	r24
 37e:	77 95       	ror	r23
 380:	67 95       	ror	r22
 382:	b7 95       	ror	r27
 384:	f7 95       	ror	r31
 386:	9f 5f       	subi	r25, 0xFF	; 255
 388:	c9 f7       	brne	.-14     	; 0x37c <__divsf3_pse+0x74>
 38a:	88 0f       	add	r24, r24
 38c:	91 1d       	adc	r25, r1
 38e:	96 95       	lsr	r25
 390:	87 95       	ror	r24
 392:	97 f9       	bld	r25, 7
 394:	08 95       	ret
 396:	e1 e0       	ldi	r30, 0x01	; 1
 398:	66 0f       	add	r22, r22
 39a:	77 1f       	adc	r23, r23
 39c:	88 1f       	adc	r24, r24
 39e:	bb 1f       	adc	r27, r27
 3a0:	62 17       	cp	r22, r18
 3a2:	73 07       	cpc	r23, r19
 3a4:	84 07       	cpc	r24, r20
 3a6:	ba 07       	cpc	r27, r26
 3a8:	20 f0       	brcs	.+8      	; 0x3b2 <__divsf3_pse+0xaa>
 3aa:	62 1b       	sub	r22, r18
 3ac:	73 0b       	sbc	r23, r19
 3ae:	84 0b       	sbc	r24, r20
 3b0:	ba 0b       	sbc	r27, r26
 3b2:	ee 1f       	adc	r30, r30
 3b4:	88 f7       	brcc	.-30     	; 0x398 <__divsf3_pse+0x90>
 3b6:	e0 95       	com	r30
 3b8:	08 95       	ret

000003ba <__fixunssfsi>:
 3ba:	c1 d0       	rcall	.+386    	; 0x53e <__fp_splitA>
 3bc:	88 f0       	brcs	.+34     	; 0x3e0 <__fixunssfsi+0x26>
 3be:	9f 57       	subi	r25, 0x7F	; 127
 3c0:	90 f0       	brcs	.+36     	; 0x3e6 <__fixunssfsi+0x2c>
 3c2:	b9 2f       	mov	r27, r25
 3c4:	99 27       	eor	r25, r25
 3c6:	b7 51       	subi	r27, 0x17	; 23
 3c8:	a0 f0       	brcs	.+40     	; 0x3f2 <__fixunssfsi+0x38>
 3ca:	d1 f0       	breq	.+52     	; 0x400 <__fixunssfsi+0x46>
 3cc:	66 0f       	add	r22, r22
 3ce:	77 1f       	adc	r23, r23
 3d0:	88 1f       	adc	r24, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	1a f0       	brmi	.+6      	; 0x3dc <__fixunssfsi+0x22>
 3d6:	ba 95       	dec	r27
 3d8:	c9 f7       	brne	.-14     	; 0x3cc <__fixunssfsi+0x12>
 3da:	12 c0       	rjmp	.+36     	; 0x400 <__fixunssfsi+0x46>
 3dc:	b1 30       	cpi	r27, 0x01	; 1
 3de:	81 f0       	breq	.+32     	; 0x400 <__fixunssfsi+0x46>
 3e0:	df d0       	rcall	.+446    	; 0x5a0 <__fp_zero>
 3e2:	b1 e0       	ldi	r27, 0x01	; 1
 3e4:	08 95       	ret
 3e6:	dc c0       	rjmp	.+440    	; 0x5a0 <__fp_zero>
 3e8:	67 2f       	mov	r22, r23
 3ea:	78 2f       	mov	r23, r24
 3ec:	88 27       	eor	r24, r24
 3ee:	b8 5f       	subi	r27, 0xF8	; 248
 3f0:	39 f0       	breq	.+14     	; 0x400 <__fixunssfsi+0x46>
 3f2:	b9 3f       	cpi	r27, 0xF9	; 249
 3f4:	cc f3       	brlt	.-14     	; 0x3e8 <__fixunssfsi+0x2e>
 3f6:	86 95       	lsr	r24
 3f8:	77 95       	ror	r23
 3fa:	67 95       	ror	r22
 3fc:	b3 95       	inc	r27
 3fe:	d9 f7       	brne	.-10     	; 0x3f6 <__fixunssfsi+0x3c>
 400:	3e f4       	brtc	.+14     	; 0x410 <__fixunssfsi+0x56>
 402:	90 95       	com	r25
 404:	80 95       	com	r24
 406:	70 95       	com	r23
 408:	61 95       	neg	r22
 40a:	7f 4f       	sbci	r23, 0xFF	; 255
 40c:	8f 4f       	sbci	r24, 0xFF	; 255
 40e:	9f 4f       	sbci	r25, 0xFF	; 255
 410:	08 95       	ret

00000412 <__floatunsisf>:
 412:	e8 94       	clt
 414:	09 c0       	rjmp	.+18     	; 0x428 <__floatsisf+0x12>

00000416 <__floatsisf>:
 416:	97 fb       	bst	r25, 7
 418:	3e f4       	brtc	.+14     	; 0x428 <__floatsisf+0x12>
 41a:	90 95       	com	r25
 41c:	80 95       	com	r24
 41e:	70 95       	com	r23
 420:	61 95       	neg	r22
 422:	7f 4f       	sbci	r23, 0xFF	; 255
 424:	8f 4f       	sbci	r24, 0xFF	; 255
 426:	9f 4f       	sbci	r25, 0xFF	; 255
 428:	99 23       	and	r25, r25
 42a:	a9 f0       	breq	.+42     	; 0x456 <__floatsisf+0x40>
 42c:	f9 2f       	mov	r31, r25
 42e:	96 e9       	ldi	r25, 0x96	; 150
 430:	bb 27       	eor	r27, r27
 432:	93 95       	inc	r25
 434:	f6 95       	lsr	r31
 436:	87 95       	ror	r24
 438:	77 95       	ror	r23
 43a:	67 95       	ror	r22
 43c:	b7 95       	ror	r27
 43e:	f1 11       	cpse	r31, r1
 440:	f8 cf       	rjmp	.-16     	; 0x432 <__floatsisf+0x1c>
 442:	fa f4       	brpl	.+62     	; 0x482 <__floatsisf+0x6c>
 444:	bb 0f       	add	r27, r27
 446:	11 f4       	brne	.+4      	; 0x44c <__floatsisf+0x36>
 448:	60 ff       	sbrs	r22, 0
 44a:	1b c0       	rjmp	.+54     	; 0x482 <__floatsisf+0x6c>
 44c:	6f 5f       	subi	r22, 0xFF	; 255
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	16 c0       	rjmp	.+44     	; 0x482 <__floatsisf+0x6c>
 456:	88 23       	and	r24, r24
 458:	11 f0       	breq	.+4      	; 0x45e <__floatsisf+0x48>
 45a:	96 e9       	ldi	r25, 0x96	; 150
 45c:	11 c0       	rjmp	.+34     	; 0x480 <__floatsisf+0x6a>
 45e:	77 23       	and	r23, r23
 460:	21 f0       	breq	.+8      	; 0x46a <__floatsisf+0x54>
 462:	9e e8       	ldi	r25, 0x8E	; 142
 464:	87 2f       	mov	r24, r23
 466:	76 2f       	mov	r23, r22
 468:	05 c0       	rjmp	.+10     	; 0x474 <__floatsisf+0x5e>
 46a:	66 23       	and	r22, r22
 46c:	71 f0       	breq	.+28     	; 0x48a <__floatsisf+0x74>
 46e:	96 e8       	ldi	r25, 0x86	; 134
 470:	86 2f       	mov	r24, r22
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	60 e0       	ldi	r22, 0x00	; 0
 476:	2a f0       	brmi	.+10     	; 0x482 <__floatsisf+0x6c>
 478:	9a 95       	dec	r25
 47a:	66 0f       	add	r22, r22
 47c:	77 1f       	adc	r23, r23
 47e:	88 1f       	adc	r24, r24
 480:	da f7       	brpl	.-10     	; 0x478 <__floatsisf+0x62>
 482:	88 0f       	add	r24, r24
 484:	96 95       	lsr	r25
 486:	87 95       	ror	r24
 488:	97 f9       	bld	r25, 7
 48a:	08 95       	ret

0000048c <__fp_inf>:
 48c:	97 f9       	bld	r25, 7
 48e:	9f 67       	ori	r25, 0x7F	; 127
 490:	80 e8       	ldi	r24, 0x80	; 128
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	60 e0       	ldi	r22, 0x00	; 0
 496:	08 95       	ret

00000498 <__fp_mintl>:
 498:	88 23       	and	r24, r24
 49a:	71 f4       	brne	.+28     	; 0x4b8 <__fp_mintl+0x20>
 49c:	77 23       	and	r23, r23
 49e:	21 f0       	breq	.+8      	; 0x4a8 <__fp_mintl+0x10>
 4a0:	98 50       	subi	r25, 0x08	; 8
 4a2:	87 2b       	or	r24, r23
 4a4:	76 2f       	mov	r23, r22
 4a6:	07 c0       	rjmp	.+14     	; 0x4b6 <__fp_mintl+0x1e>
 4a8:	66 23       	and	r22, r22
 4aa:	11 f4       	brne	.+4      	; 0x4b0 <__fp_mintl+0x18>
 4ac:	99 27       	eor	r25, r25
 4ae:	0d c0       	rjmp	.+26     	; 0x4ca <__fp_mintl+0x32>
 4b0:	90 51       	subi	r25, 0x10	; 16
 4b2:	86 2b       	or	r24, r22
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	60 e0       	ldi	r22, 0x00	; 0
 4b8:	2a f0       	brmi	.+10     	; 0x4c4 <__fp_mintl+0x2c>
 4ba:	9a 95       	dec	r25
 4bc:	66 0f       	add	r22, r22
 4be:	77 1f       	adc	r23, r23
 4c0:	88 1f       	adc	r24, r24
 4c2:	da f7       	brpl	.-10     	; 0x4ba <__fp_mintl+0x22>
 4c4:	88 0f       	add	r24, r24
 4c6:	96 95       	lsr	r25
 4c8:	87 95       	ror	r24
 4ca:	97 f9       	bld	r25, 7
 4cc:	08 95       	ret

000004ce <__fp_mpack>:
 4ce:	9f 3f       	cpi	r25, 0xFF	; 255
 4d0:	31 f0       	breq	.+12     	; 0x4de <__fp_mpack_finite+0xc>

000004d2 <__fp_mpack_finite>:
 4d2:	91 50       	subi	r25, 0x01	; 1
 4d4:	20 f4       	brcc	.+8      	; 0x4de <__fp_mpack_finite+0xc>
 4d6:	87 95       	ror	r24
 4d8:	77 95       	ror	r23
 4da:	67 95       	ror	r22
 4dc:	b7 95       	ror	r27
 4de:	88 0f       	add	r24, r24
 4e0:	91 1d       	adc	r25, r1
 4e2:	96 95       	lsr	r25
 4e4:	87 95       	ror	r24
 4e6:	97 f9       	bld	r25, 7
 4e8:	08 95       	ret

000004ea <__fp_nan>:
 4ea:	9f ef       	ldi	r25, 0xFF	; 255
 4ec:	80 ec       	ldi	r24, 0xC0	; 192
 4ee:	08 95       	ret

000004f0 <__fp_pscA>:
 4f0:	00 24       	eor	r0, r0
 4f2:	0a 94       	dec	r0
 4f4:	16 16       	cp	r1, r22
 4f6:	17 06       	cpc	r1, r23
 4f8:	18 06       	cpc	r1, r24
 4fa:	09 06       	cpc	r0, r25
 4fc:	08 95       	ret

000004fe <__fp_pscB>:
 4fe:	00 24       	eor	r0, r0
 500:	0a 94       	dec	r0
 502:	12 16       	cp	r1, r18
 504:	13 06       	cpc	r1, r19
 506:	14 06       	cpc	r1, r20
 508:	05 06       	cpc	r0, r21
 50a:	08 95       	ret

0000050c <__fp_round>:
 50c:	09 2e       	mov	r0, r25
 50e:	03 94       	inc	r0
 510:	00 0c       	add	r0, r0
 512:	11 f4       	brne	.+4      	; 0x518 <__fp_round+0xc>
 514:	88 23       	and	r24, r24
 516:	52 f0       	brmi	.+20     	; 0x52c <__fp_round+0x20>
 518:	bb 0f       	add	r27, r27
 51a:	40 f4       	brcc	.+16     	; 0x52c <__fp_round+0x20>
 51c:	bf 2b       	or	r27, r31
 51e:	11 f4       	brne	.+4      	; 0x524 <__fp_round+0x18>
 520:	60 ff       	sbrs	r22, 0
 522:	04 c0       	rjmp	.+8      	; 0x52c <__fp_round+0x20>
 524:	6f 5f       	subi	r22, 0xFF	; 255
 526:	7f 4f       	sbci	r23, 0xFF	; 255
 528:	8f 4f       	sbci	r24, 0xFF	; 255
 52a:	9f 4f       	sbci	r25, 0xFF	; 255
 52c:	08 95       	ret

0000052e <__fp_split3>:
 52e:	57 fd       	sbrc	r21, 7
 530:	90 58       	subi	r25, 0x80	; 128
 532:	44 0f       	add	r20, r20
 534:	55 1f       	adc	r21, r21
 536:	59 f0       	breq	.+22     	; 0x54e <__fp_splitA+0x10>
 538:	5f 3f       	cpi	r21, 0xFF	; 255
 53a:	71 f0       	breq	.+28     	; 0x558 <__fp_splitA+0x1a>
 53c:	47 95       	ror	r20

0000053e <__fp_splitA>:
 53e:	88 0f       	add	r24, r24
 540:	97 fb       	bst	r25, 7
 542:	99 1f       	adc	r25, r25
 544:	61 f0       	breq	.+24     	; 0x55e <__fp_splitA+0x20>
 546:	9f 3f       	cpi	r25, 0xFF	; 255
 548:	79 f0       	breq	.+30     	; 0x568 <__fp_splitA+0x2a>
 54a:	87 95       	ror	r24
 54c:	08 95       	ret
 54e:	12 16       	cp	r1, r18
 550:	13 06       	cpc	r1, r19
 552:	14 06       	cpc	r1, r20
 554:	55 1f       	adc	r21, r21
 556:	f2 cf       	rjmp	.-28     	; 0x53c <__fp_split3+0xe>
 558:	46 95       	lsr	r20
 55a:	f1 df       	rcall	.-30     	; 0x53e <__fp_splitA>
 55c:	08 c0       	rjmp	.+16     	; 0x56e <__fp_splitA+0x30>
 55e:	16 16       	cp	r1, r22
 560:	17 06       	cpc	r1, r23
 562:	18 06       	cpc	r1, r24
 564:	99 1f       	adc	r25, r25
 566:	f1 cf       	rjmp	.-30     	; 0x54a <__fp_splitA+0xc>
 568:	86 95       	lsr	r24
 56a:	71 05       	cpc	r23, r1
 56c:	61 05       	cpc	r22, r1
 56e:	08 94       	sec
 570:	08 95       	ret

00000572 <__fp_trunc>:
 572:	e5 df       	rcall	.-54     	; 0x53e <__fp_splitA>
 574:	a0 f0       	brcs	.+40     	; 0x59e <__fp_trunc+0x2c>
 576:	be e7       	ldi	r27, 0x7E	; 126
 578:	b9 17       	cp	r27, r25
 57a:	88 f4       	brcc	.+34     	; 0x59e <__fp_trunc+0x2c>
 57c:	bb 27       	eor	r27, r27
 57e:	9f 38       	cpi	r25, 0x8F	; 143
 580:	60 f4       	brcc	.+24     	; 0x59a <__fp_trunc+0x28>
 582:	16 16       	cp	r1, r22
 584:	b1 1d       	adc	r27, r1
 586:	67 2f       	mov	r22, r23
 588:	78 2f       	mov	r23, r24
 58a:	88 27       	eor	r24, r24
 58c:	98 5f       	subi	r25, 0xF8	; 248
 58e:	f7 cf       	rjmp	.-18     	; 0x57e <__fp_trunc+0xc>
 590:	86 95       	lsr	r24
 592:	77 95       	ror	r23
 594:	67 95       	ror	r22
 596:	b1 1d       	adc	r27, r1
 598:	93 95       	inc	r25
 59a:	96 39       	cpi	r25, 0x96	; 150
 59c:	c8 f3       	brcs	.-14     	; 0x590 <__fp_trunc+0x1e>
 59e:	08 95       	ret

000005a0 <__fp_zero>:
 5a0:	e8 94       	clt

000005a2 <__fp_szero>:
 5a2:	bb 27       	eor	r27, r27
 5a4:	66 27       	eor	r22, r22
 5a6:	77 27       	eor	r23, r23
 5a8:	cb 01       	movw	r24, r22
 5aa:	97 f9       	bld	r25, 7
 5ac:	08 95       	ret

000005ae <__muluhisi3>:
 5ae:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__umulhisi3>
 5b2:	a5 9f       	mul	r26, r21
 5b4:	90 0d       	add	r25, r0
 5b6:	b4 9f       	mul	r27, r20
 5b8:	90 0d       	add	r25, r0
 5ba:	a4 9f       	mul	r26, r20
 5bc:	80 0d       	add	r24, r0
 5be:	91 1d       	adc	r25, r1
 5c0:	11 24       	eor	r1, r1
 5c2:	08 95       	ret

000005c4 <__umulhisi3>:
 5c4:	a2 9f       	mul	r26, r18
 5c6:	b0 01       	movw	r22, r0
 5c8:	b3 9f       	mul	r27, r19
 5ca:	c0 01       	movw	r24, r0
 5cc:	a3 9f       	mul	r26, r19
 5ce:	01 d0       	rcall	.+2      	; 0x5d2 <__umulhisi3+0xe>
 5d0:	b2 9f       	mul	r27, r18
 5d2:	70 0d       	add	r23, r0
 5d4:	81 1d       	adc	r24, r1
 5d6:	11 24       	eor	r1, r1
 5d8:	91 1d       	adc	r25, r1
 5da:	08 95       	ret

000005dc <_exit>:
 5dc:	f8 94       	cli

000005de <__stop_program>:
 5de:	ff cf       	rjmp	.-2      	; 0x5de <__stop_program>
