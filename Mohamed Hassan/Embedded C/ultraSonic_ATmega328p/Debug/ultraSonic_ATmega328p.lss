
ultraSonic_ATmega328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000005a8  0000063c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800100  00800100  0000063c  2**0
                  ALLOC
  3 .stab         00001b60  00000000  00000000  0000063c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000768  00000000  00000000  0000219c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000050  00000000  00000000  00002933  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000286  00000000  00000000  00002983  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000014e  00000000  00000000  00002c09  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000236  00000000  00000000  00002d57  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000e8  00000000  00000000  00002f90  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000001be  00000000  00000000  00003078  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000121  00000000  00000000  00003236  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000040  00000000  00000000  00003357  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 6d 00 	jmp	0xda	; 0xda <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 31       	cpi	r26, 0x14	; 20
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 00 01 	call	0x200	; 0x200 <main>
  88:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_16>:
		Distance=ceil(echo_Time/58.0);
	}
}
//INTERRUPTS:
ISR(TIMER0_OVF_vect)
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
  9e:	af 93       	push	r26
  a0:	bf 93       	push	r27
	//Get Here Every 1ms
	/*USAGE:
	1.Used in measuring the time of being the echo pin high
	
	*/
	OVF_Counter++;				//To know The number of overflow times
  a2:	80 91 08 01 	lds	r24, 0x0108
  a6:	90 91 09 01 	lds	r25, 0x0109
  aa:	a0 91 0a 01 	lds	r26, 0x010A
  ae:	b0 91 0b 01 	lds	r27, 0x010B
  b2:	01 96       	adiw	r24, 0x01	; 1
  b4:	a1 1d       	adc	r26, r1
  b6:	b1 1d       	adc	r27, r1
  b8:	80 93 08 01 	sts	0x0108, r24
  bc:	90 93 09 01 	sts	0x0109, r25
  c0:	a0 93 0a 01 	sts	0x010A, r26
  c4:	b0 93 0b 01 	sts	0x010B, r27
	
	
}
  c8:	bf 91       	pop	r27
  ca:	af 91       	pop	r26
  cc:	9f 91       	pop	r25
  ce:	8f 91       	pop	r24
  d0:	0f 90       	pop	r0
  d2:	0f be       	out	0x3f, r0	; 63
  d4:	0f 90       	pop	r0
  d6:	1f 90       	pop	r1
  d8:	18 95       	reti

000000da <__vector_1>:
ISR(INT0_vect)
{
  da:	1f 92       	push	r1
  dc:	0f 92       	push	r0
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	0f 92       	push	r0
  e2:	11 24       	eor	r1, r1
  e4:	2f 93       	push	r18
  e6:	3f 93       	push	r19
  e8:	4f 93       	push	r20
  ea:	5f 93       	push	r21
  ec:	6f 93       	push	r22
  ee:	7f 93       	push	r23
  f0:	8f 93       	push	r24
  f2:	9f 93       	push	r25
  f4:	af 93       	push	r26
  f6:	bf 93       	push	r27
  f8:	ef 93       	push	r30
	if(state==0)  //Check For Rising Edge "which means that echo pin start to receive the wave
  fa:	80 91 06 01 	lds	r24, 0x0106
  fe:	90 91 07 01 	lds	r25, 0x0107
 102:	89 2b       	or	r24, r25
 104:	11 f5       	brne	.+68     	; 0x14a <__vector_1+0x70>
	{
		state=1;
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	90 93 07 01 	sts	0x0107, r25
 10e:	80 93 06 01 	sts	0x0106, r24
		Start_Reciv=(OVF_Counter*255)+TCNT0;
 112:	20 91 08 01 	lds	r18, 0x0108
 116:	30 91 09 01 	lds	r19, 0x0109
 11a:	40 91 0a 01 	lds	r20, 0x010A
 11e:	50 91 0b 01 	lds	r21, 0x010B
 122:	e6 b5       	in	r30, 0x26	; 38
 124:	af ef       	ldi	r26, 0xFF	; 255
 126:	b0 e0       	ldi	r27, 0x00	; 0
 128:	0e 94 bb 02 	call	0x576	; 0x576 <__muluhisi3>
 12c:	dc 01       	movw	r26, r24
 12e:	cb 01       	movw	r24, r22
 130:	8e 0f       	add	r24, r30
 132:	91 1d       	adc	r25, r1
 134:	a1 1d       	adc	r26, r1
 136:	b1 1d       	adc	r27, r1
 138:	80 93 10 01 	sts	0x0110, r24
 13c:	90 93 11 01 	sts	0x0111, r25
 140:	a0 93 12 01 	sts	0x0112, r26
 144:	b0 93 13 01 	sts	0x0113, r27
 148:	28 c0       	rjmp	.+80     	; 0x19a <__vector_1+0xc0>
		//tbi(PORTB,PB0);
	}
	else		//Check For Falling Edge "which means that echo pin Finishing Receiving
	{
		state=0;
 14a:	10 92 07 01 	sts	0x0107, r1
 14e:	10 92 06 01 	sts	0x0106, r1
		End_Reciv=(OVF_Counter*255)+TCNT0;
 152:	20 91 08 01 	lds	r18, 0x0108
 156:	30 91 09 01 	lds	r19, 0x0109
 15a:	40 91 0a 01 	lds	r20, 0x010A
 15e:	50 91 0b 01 	lds	r21, 0x010B
 162:	e6 b5       	in	r30, 0x26	; 38
 164:	af ef       	ldi	r26, 0xFF	; 255
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	0e 94 bb 02 	call	0x576	; 0x576 <__muluhisi3>
 16c:	dc 01       	movw	r26, r24
 16e:	cb 01       	movw	r24, r22
 170:	8e 0f       	add	r24, r30
 172:	91 1d       	adc	r25, r1
 174:	a1 1d       	adc	r26, r1
 176:	b1 1d       	adc	r27, r1
 178:	80 93 0c 01 	sts	0x010C, r24
 17c:	90 93 0d 01 	sts	0x010D, r25
 180:	a0 93 0e 01 	sts	0x010E, r26
 184:	b0 93 0f 01 	sts	0x010F, r27
		TCNT0=0;
 188:	16 bc       	out	0x26, r1	; 38
		OVF_Counter=0;
 18a:	10 92 08 01 	sts	0x0108, r1
 18e:	10 92 09 01 	sts	0x0109, r1
 192:	10 92 0a 01 	sts	0x010A, r1
 196:	10 92 0b 01 	sts	0x010B, r1
		//tbi(PORTC,PC5);
	}
}
 19a:	ef 91       	pop	r30
 19c:	bf 91       	pop	r27
 19e:	af 91       	pop	r26
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	7f 91       	pop	r23
 1a6:	6f 91       	pop	r22
 1a8:	5f 91       	pop	r21
 1aa:	4f 91       	pop	r20
 1ac:	3f 91       	pop	r19
 1ae:	2f 91       	pop	r18
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <init_ultrasonic>:
//=======================
void init_ultrasonic()
{
	sbi(DDRD,trig_pin);
 1ba:	55 9a       	sbi	0x0a, 5	; 10
	cbi(PORTD,trig_pin);
 1bc:	5d 98       	cbi	0x0b, 5	; 11
	cbi(DDRD,echo_pin);
 1be:	52 98       	cbi	0x0a, 2	; 10
	cbi(PORTD,echo_pin);
 1c0:	5a 98       	cbi	0x0b, 2	; 11
 1c2:	08 95       	ret

000001c4 <init_timer0>:
}
void init_timer0()
{
	//Initialize Timer0 with Normal mode and its tick 'll be occurred every 4 micro seconds
	sbi(TCCR0B,CS00); 		//PREscaler 64
 1c4:	85 b5       	in	r24, 0x25	; 37
 1c6:	81 60       	ori	r24, 0x01	; 1
 1c8:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B,CS01);
 1ca:	85 b5       	in	r24, 0x25	; 37
 1cc:	82 60       	ori	r24, 0x02	; 2
 1ce:	85 bd       	out	0x25, r24	; 37
	sbi(TIMSK0,TOIE0);		//enable overflow interrupt
 1d0:	ee e6       	ldi	r30, 0x6E	; 110
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	81 60       	ori	r24, 0x01	; 1
 1d8:	80 83       	st	Z, r24
 1da:	08 95       	ret

000001dc <init_ext_interrupts>:
	
}

void init_ext_interrupts()
{
	cbi(DDRD,PD2);			//Echo is an input pin
 1dc:	52 98       	cbi	0x0a, 2	; 10
	sbi(EICRA,ISC00);			//set trigger INT0 for Logical change mode
 1de:	e9 e6       	ldi	r30, 0x69	; 105
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	81 60       	ori	r24, 0x01	; 1
 1e6:	80 83       	st	Z, r24
	sbi(EICRA,ISC01);
 1e8:	80 81       	ld	r24, Z
 1ea:	82 60       	ori	r24, 0x02	; 2
 1ec:	80 83       	st	Z, r24
	sbi(EIMSK,INT0);			//turn on INT0
 1ee:	e8 9a       	sbi	0x1d, 0	; 29
 1f0:	08 95       	ret

000001f2 <sonar>:
	//EIMSK|=(1<<INT1);			//turn on INT1
}

void sonar()
{
	sbi(PORTD,trig_pin);
 1f2:	5d 9a       	sbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f4:	85 e3       	ldi	r24, 0x35	; 53
 1f6:	8a 95       	dec	r24
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <sonar+0x4>
 1fa:	00 00       	nop
	_delay_us(10);
	cbi(PORTD,trig_pin);
 1fc:	5d 98       	cbi	0x0b, 5	; 11
 1fe:	08 95       	ret

00000200 <main>:


int main(void)
{
	//For Indication
	sbi(DDRB,PB0);
 200:	20 9a       	sbi	0x04, 0	; 4
	cbi(PORTB,PB0);
 202:	28 98       	cbi	0x05, 0	; 5
	sbi(DDRC,PC5);
 204:	3d 9a       	sbi	0x07, 5	; 7
	cbi(PORTC,PC5);
 206:	45 98       	cbi	0x08, 5	; 8
	
	init_ultrasonic();
 208:	0e 94 dd 00 	call	0x1ba	; 0x1ba <init_ultrasonic>
	init_timer0();
 20c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <init_timer0>
	init_ext_interrupts();
 210:	0e 94 ee 00 	call	0x1dc	; 0x1dc <init_ext_interrupts>
	sei();
 214:	78 94       	sei
    while(1)
    {
		sonar();
 216:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <sonar>
        DeltaT=(End_Reciv-Start_Reciv);
 21a:	40 91 0c 01 	lds	r20, 0x010C
 21e:	50 91 0d 01 	lds	r21, 0x010D
 222:	60 91 0e 01 	lds	r22, 0x010E
 226:	70 91 0f 01 	lds	r23, 0x010F
 22a:	80 91 10 01 	lds	r24, 0x0110
 22e:	90 91 11 01 	lds	r25, 0x0111
 232:	a0 91 12 01 	lds	r26, 0x0112
 236:	b0 91 13 01 	lds	r27, 0x0113
 23a:	48 1b       	sub	r20, r24
 23c:	59 0b       	sbc	r21, r25
 23e:	50 93 05 01 	sts	0x0105, r21
 242:	40 93 04 01 	sts	0x0104, r20
		echo_Time=(DeltaT*4);				//(the difference between the beginning of the echo pulse and the end of it) multiplied by 4 microseconds 
 246:	80 91 04 01 	lds	r24, 0x0104
 24a:	90 91 05 01 	lds	r25, 0x0105
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	90 93 03 01 	sts	0x0103, r25
 25a:	80 93 02 01 	sts	0x0102, r24
		Distance=ceil(echo_Time/58.0);
 25e:	60 91 02 01 	lds	r22, 0x0102
 262:	70 91 03 01 	lds	r23, 0x0103
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	0e 94 ed 01 	call	0x3da	; 0x3da <__floatunsisf>
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	48 e6       	ldi	r20, 0x68	; 104
 274:	52 e4       	ldi	r21, 0x42	; 66
 276:	0e 94 59 01 	call	0x2b2	; 0x2b2 <__divsf3>
 27a:	0e 94 46 01 	call	0x28c	; 0x28c <ceil>
 27e:	0e 94 c1 01 	call	0x382	; 0x382 <__fixunssfsi>
 282:	70 93 01 01 	sts	0x0101, r23
 286:	60 93 00 01 	sts	0x0100, r22
 28a:	c5 cf       	rjmp	.-118    	; 0x216 <main+0x16>

0000028c <ceil>:
 28c:	56 d1       	rcall	.+684    	; 0x53a <__fp_trunc>
 28e:	80 f0       	brcs	.+32     	; 0x2b0 <ceil+0x24>
 290:	9f 37       	cpi	r25, 0x7F	; 127
 292:	40 f4       	brcc	.+16     	; 0x2a4 <ceil+0x18>
 294:	91 11       	cpse	r25, r1
 296:	0e f4       	brtc	.+2      	; 0x29a <ceil+0xe>
 298:	68 c1       	rjmp	.+720    	; 0x56a <__fp_szero>
 29a:	60 e0       	ldi	r22, 0x00	; 0
 29c:	70 e0       	ldi	r23, 0x00	; 0
 29e:	80 e8       	ldi	r24, 0x80	; 128
 2a0:	9f e3       	ldi	r25, 0x3F	; 63
 2a2:	08 95       	ret
 2a4:	26 f0       	brts	.+8      	; 0x2ae <ceil+0x22>
 2a6:	1b 16       	cp	r1, r27
 2a8:	61 1d       	adc	r22, r1
 2aa:	71 1d       	adc	r23, r1
 2ac:	81 1d       	adc	r24, r1
 2ae:	d8 c0       	rjmp	.+432    	; 0x460 <__fp_mintl>
 2b0:	f2 c0       	rjmp	.+484    	; 0x496 <__fp_mpack>

000002b2 <__divsf3>:
 2b2:	0c d0       	rcall	.+24     	; 0x2cc <__divsf3x>
 2b4:	0f c1       	rjmp	.+542    	; 0x4d4 <__fp_round>
 2b6:	07 d1       	rcall	.+526    	; 0x4c6 <__fp_pscB>
 2b8:	40 f0       	brcs	.+16     	; 0x2ca <__divsf3+0x18>
 2ba:	fe d0       	rcall	.+508    	; 0x4b8 <__fp_pscA>
 2bc:	30 f0       	brcs	.+12     	; 0x2ca <__divsf3+0x18>
 2be:	21 f4       	brne	.+8      	; 0x2c8 <__divsf3+0x16>
 2c0:	5f 3f       	cpi	r21, 0xFF	; 255
 2c2:	19 f0       	breq	.+6      	; 0x2ca <__divsf3+0x18>
 2c4:	c7 c0       	rjmp	.+398    	; 0x454 <__fp_inf>
 2c6:	51 11       	cpse	r21, r1
 2c8:	50 c1       	rjmp	.+672    	; 0x56a <__fp_szero>
 2ca:	f3 c0       	rjmp	.+486    	; 0x4b2 <__fp_nan>

000002cc <__divsf3x>:
 2cc:	14 d1       	rcall	.+552    	; 0x4f6 <__fp_split3>
 2ce:	98 f3       	brcs	.-26     	; 0x2b6 <__divsf3+0x4>

000002d0 <__divsf3_pse>:
 2d0:	99 23       	and	r25, r25
 2d2:	c9 f3       	breq	.-14     	; 0x2c6 <__divsf3+0x14>
 2d4:	55 23       	and	r21, r21
 2d6:	b1 f3       	breq	.-20     	; 0x2c4 <__divsf3+0x12>
 2d8:	95 1b       	sub	r25, r21
 2da:	55 0b       	sbc	r21, r21
 2dc:	bb 27       	eor	r27, r27
 2de:	aa 27       	eor	r26, r26
 2e0:	62 17       	cp	r22, r18
 2e2:	73 07       	cpc	r23, r19
 2e4:	84 07       	cpc	r24, r20
 2e6:	38 f0       	brcs	.+14     	; 0x2f6 <__divsf3_pse+0x26>
 2e8:	9f 5f       	subi	r25, 0xFF	; 255
 2ea:	5f 4f       	sbci	r21, 0xFF	; 255
 2ec:	22 0f       	add	r18, r18
 2ee:	33 1f       	adc	r19, r19
 2f0:	44 1f       	adc	r20, r20
 2f2:	aa 1f       	adc	r26, r26
 2f4:	a9 f3       	breq	.-22     	; 0x2e0 <__divsf3_pse+0x10>
 2f6:	33 d0       	rcall	.+102    	; 0x35e <__divsf3_pse+0x8e>
 2f8:	0e 2e       	mov	r0, r30
 2fa:	3a f0       	brmi	.+14     	; 0x30a <__divsf3_pse+0x3a>
 2fc:	e0 e8       	ldi	r30, 0x80	; 128
 2fe:	30 d0       	rcall	.+96     	; 0x360 <__divsf3_pse+0x90>
 300:	91 50       	subi	r25, 0x01	; 1
 302:	50 40       	sbci	r21, 0x00	; 0
 304:	e6 95       	lsr	r30
 306:	00 1c       	adc	r0, r0
 308:	ca f7       	brpl	.-14     	; 0x2fc <__divsf3_pse+0x2c>
 30a:	29 d0       	rcall	.+82     	; 0x35e <__divsf3_pse+0x8e>
 30c:	fe 2f       	mov	r31, r30
 30e:	27 d0       	rcall	.+78     	; 0x35e <__divsf3_pse+0x8e>
 310:	66 0f       	add	r22, r22
 312:	77 1f       	adc	r23, r23
 314:	88 1f       	adc	r24, r24
 316:	bb 1f       	adc	r27, r27
 318:	26 17       	cp	r18, r22
 31a:	37 07       	cpc	r19, r23
 31c:	48 07       	cpc	r20, r24
 31e:	ab 07       	cpc	r26, r27
 320:	b0 e8       	ldi	r27, 0x80	; 128
 322:	09 f0       	breq	.+2      	; 0x326 <__divsf3_pse+0x56>
 324:	bb 0b       	sbc	r27, r27
 326:	80 2d       	mov	r24, r0
 328:	bf 01       	movw	r22, r30
 32a:	ff 27       	eor	r31, r31
 32c:	93 58       	subi	r25, 0x83	; 131
 32e:	5f 4f       	sbci	r21, 0xFF	; 255
 330:	2a f0       	brmi	.+10     	; 0x33c <__divsf3_pse+0x6c>
 332:	9e 3f       	cpi	r25, 0xFE	; 254
 334:	51 05       	cpc	r21, r1
 336:	68 f0       	brcs	.+26     	; 0x352 <__divsf3_pse+0x82>
 338:	8d c0       	rjmp	.+282    	; 0x454 <__fp_inf>
 33a:	17 c1       	rjmp	.+558    	; 0x56a <__fp_szero>
 33c:	5f 3f       	cpi	r21, 0xFF	; 255
 33e:	ec f3       	brlt	.-6      	; 0x33a <__divsf3_pse+0x6a>
 340:	98 3e       	cpi	r25, 0xE8	; 232
 342:	dc f3       	brlt	.-10     	; 0x33a <__divsf3_pse+0x6a>
 344:	86 95       	lsr	r24
 346:	77 95       	ror	r23
 348:	67 95       	ror	r22
 34a:	b7 95       	ror	r27
 34c:	f7 95       	ror	r31
 34e:	9f 5f       	subi	r25, 0xFF	; 255
 350:	c9 f7       	brne	.-14     	; 0x344 <__divsf3_pse+0x74>
 352:	88 0f       	add	r24, r24
 354:	91 1d       	adc	r25, r1
 356:	96 95       	lsr	r25
 358:	87 95       	ror	r24
 35a:	97 f9       	bld	r25, 7
 35c:	08 95       	ret
 35e:	e1 e0       	ldi	r30, 0x01	; 1
 360:	66 0f       	add	r22, r22
 362:	77 1f       	adc	r23, r23
 364:	88 1f       	adc	r24, r24
 366:	bb 1f       	adc	r27, r27
 368:	62 17       	cp	r22, r18
 36a:	73 07       	cpc	r23, r19
 36c:	84 07       	cpc	r24, r20
 36e:	ba 07       	cpc	r27, r26
 370:	20 f0       	brcs	.+8      	; 0x37a <__divsf3_pse+0xaa>
 372:	62 1b       	sub	r22, r18
 374:	73 0b       	sbc	r23, r19
 376:	84 0b       	sbc	r24, r20
 378:	ba 0b       	sbc	r27, r26
 37a:	ee 1f       	adc	r30, r30
 37c:	88 f7       	brcc	.-30     	; 0x360 <__divsf3_pse+0x90>
 37e:	e0 95       	com	r30
 380:	08 95       	ret

00000382 <__fixunssfsi>:
 382:	c1 d0       	rcall	.+386    	; 0x506 <__fp_splitA>
 384:	88 f0       	brcs	.+34     	; 0x3a8 <__fixunssfsi+0x26>
 386:	9f 57       	subi	r25, 0x7F	; 127
 388:	90 f0       	brcs	.+36     	; 0x3ae <__fixunssfsi+0x2c>
 38a:	b9 2f       	mov	r27, r25
 38c:	99 27       	eor	r25, r25
 38e:	b7 51       	subi	r27, 0x17	; 23
 390:	a0 f0       	brcs	.+40     	; 0x3ba <__fixunssfsi+0x38>
 392:	d1 f0       	breq	.+52     	; 0x3c8 <__fixunssfsi+0x46>
 394:	66 0f       	add	r22, r22
 396:	77 1f       	adc	r23, r23
 398:	88 1f       	adc	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	1a f0       	brmi	.+6      	; 0x3a4 <__fixunssfsi+0x22>
 39e:	ba 95       	dec	r27
 3a0:	c9 f7       	brne	.-14     	; 0x394 <__fixunssfsi+0x12>
 3a2:	12 c0       	rjmp	.+36     	; 0x3c8 <__fixunssfsi+0x46>
 3a4:	b1 30       	cpi	r27, 0x01	; 1
 3a6:	81 f0       	breq	.+32     	; 0x3c8 <__fixunssfsi+0x46>
 3a8:	df d0       	rcall	.+446    	; 0x568 <__fp_zero>
 3aa:	b1 e0       	ldi	r27, 0x01	; 1
 3ac:	08 95       	ret
 3ae:	dc c0       	rjmp	.+440    	; 0x568 <__fp_zero>
 3b0:	67 2f       	mov	r22, r23
 3b2:	78 2f       	mov	r23, r24
 3b4:	88 27       	eor	r24, r24
 3b6:	b8 5f       	subi	r27, 0xF8	; 248
 3b8:	39 f0       	breq	.+14     	; 0x3c8 <__fixunssfsi+0x46>
 3ba:	b9 3f       	cpi	r27, 0xF9	; 249
 3bc:	cc f3       	brlt	.-14     	; 0x3b0 <__fixunssfsi+0x2e>
 3be:	86 95       	lsr	r24
 3c0:	77 95       	ror	r23
 3c2:	67 95       	ror	r22
 3c4:	b3 95       	inc	r27
 3c6:	d9 f7       	brne	.-10     	; 0x3be <__fixunssfsi+0x3c>
 3c8:	3e f4       	brtc	.+14     	; 0x3d8 <__fixunssfsi+0x56>
 3ca:	90 95       	com	r25
 3cc:	80 95       	com	r24
 3ce:	70 95       	com	r23
 3d0:	61 95       	neg	r22
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	8f 4f       	sbci	r24, 0xFF	; 255
 3d6:	9f 4f       	sbci	r25, 0xFF	; 255
 3d8:	08 95       	ret

000003da <__floatunsisf>:
 3da:	e8 94       	clt
 3dc:	09 c0       	rjmp	.+18     	; 0x3f0 <__floatsisf+0x12>

000003de <__floatsisf>:
 3de:	97 fb       	bst	r25, 7
 3e0:	3e f4       	brtc	.+14     	; 0x3f0 <__floatsisf+0x12>
 3e2:	90 95       	com	r25
 3e4:	80 95       	com	r24
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	99 23       	and	r25, r25
 3f2:	a9 f0       	breq	.+42     	; 0x41e <__floatsisf+0x40>
 3f4:	f9 2f       	mov	r31, r25
 3f6:	96 e9       	ldi	r25, 0x96	; 150
 3f8:	bb 27       	eor	r27, r27
 3fa:	93 95       	inc	r25
 3fc:	f6 95       	lsr	r31
 3fe:	87 95       	ror	r24
 400:	77 95       	ror	r23
 402:	67 95       	ror	r22
 404:	b7 95       	ror	r27
 406:	f1 11       	cpse	r31, r1
 408:	f8 cf       	rjmp	.-16     	; 0x3fa <__floatsisf+0x1c>
 40a:	fa f4       	brpl	.+62     	; 0x44a <__floatsisf+0x6c>
 40c:	bb 0f       	add	r27, r27
 40e:	11 f4       	brne	.+4      	; 0x414 <__floatsisf+0x36>
 410:	60 ff       	sbrs	r22, 0
 412:	1b c0       	rjmp	.+54     	; 0x44a <__floatsisf+0x6c>
 414:	6f 5f       	subi	r22, 0xFF	; 255
 416:	7f 4f       	sbci	r23, 0xFF	; 255
 418:	8f 4f       	sbci	r24, 0xFF	; 255
 41a:	9f 4f       	sbci	r25, 0xFF	; 255
 41c:	16 c0       	rjmp	.+44     	; 0x44a <__floatsisf+0x6c>
 41e:	88 23       	and	r24, r24
 420:	11 f0       	breq	.+4      	; 0x426 <__floatsisf+0x48>
 422:	96 e9       	ldi	r25, 0x96	; 150
 424:	11 c0       	rjmp	.+34     	; 0x448 <__floatsisf+0x6a>
 426:	77 23       	and	r23, r23
 428:	21 f0       	breq	.+8      	; 0x432 <__floatsisf+0x54>
 42a:	9e e8       	ldi	r25, 0x8E	; 142
 42c:	87 2f       	mov	r24, r23
 42e:	76 2f       	mov	r23, r22
 430:	05 c0       	rjmp	.+10     	; 0x43c <__floatsisf+0x5e>
 432:	66 23       	and	r22, r22
 434:	71 f0       	breq	.+28     	; 0x452 <__floatsisf+0x74>
 436:	96 e8       	ldi	r25, 0x86	; 134
 438:	86 2f       	mov	r24, r22
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	2a f0       	brmi	.+10     	; 0x44a <__floatsisf+0x6c>
 440:	9a 95       	dec	r25
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	da f7       	brpl	.-10     	; 0x440 <__floatsisf+0x62>
 44a:	88 0f       	add	r24, r24
 44c:	96 95       	lsr	r25
 44e:	87 95       	ror	r24
 450:	97 f9       	bld	r25, 7
 452:	08 95       	ret

00000454 <__fp_inf>:
 454:	97 f9       	bld	r25, 7
 456:	9f 67       	ori	r25, 0x7F	; 127
 458:	80 e8       	ldi	r24, 0x80	; 128
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	08 95       	ret

00000460 <__fp_mintl>:
 460:	88 23       	and	r24, r24
 462:	71 f4       	brne	.+28     	; 0x480 <__fp_mintl+0x20>
 464:	77 23       	and	r23, r23
 466:	21 f0       	breq	.+8      	; 0x470 <__fp_mintl+0x10>
 468:	98 50       	subi	r25, 0x08	; 8
 46a:	87 2b       	or	r24, r23
 46c:	76 2f       	mov	r23, r22
 46e:	07 c0       	rjmp	.+14     	; 0x47e <__fp_mintl+0x1e>
 470:	66 23       	and	r22, r22
 472:	11 f4       	brne	.+4      	; 0x478 <__fp_mintl+0x18>
 474:	99 27       	eor	r25, r25
 476:	0d c0       	rjmp	.+26     	; 0x492 <__fp_mintl+0x32>
 478:	90 51       	subi	r25, 0x10	; 16
 47a:	86 2b       	or	r24, r22
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	2a f0       	brmi	.+10     	; 0x48c <__fp_mintl+0x2c>
 482:	9a 95       	dec	r25
 484:	66 0f       	add	r22, r22
 486:	77 1f       	adc	r23, r23
 488:	88 1f       	adc	r24, r24
 48a:	da f7       	brpl	.-10     	; 0x482 <__fp_mintl+0x22>
 48c:	88 0f       	add	r24, r24
 48e:	96 95       	lsr	r25
 490:	87 95       	ror	r24
 492:	97 f9       	bld	r25, 7
 494:	08 95       	ret

00000496 <__fp_mpack>:
 496:	9f 3f       	cpi	r25, 0xFF	; 255
 498:	31 f0       	breq	.+12     	; 0x4a6 <__fp_mpack_finite+0xc>

0000049a <__fp_mpack_finite>:
 49a:	91 50       	subi	r25, 0x01	; 1
 49c:	20 f4       	brcc	.+8      	; 0x4a6 <__fp_mpack_finite+0xc>
 49e:	87 95       	ror	r24
 4a0:	77 95       	ror	r23
 4a2:	67 95       	ror	r22
 4a4:	b7 95       	ror	r27
 4a6:	88 0f       	add	r24, r24
 4a8:	91 1d       	adc	r25, r1
 4aa:	96 95       	lsr	r25
 4ac:	87 95       	ror	r24
 4ae:	97 f9       	bld	r25, 7
 4b0:	08 95       	ret

000004b2 <__fp_nan>:
 4b2:	9f ef       	ldi	r25, 0xFF	; 255
 4b4:	80 ec       	ldi	r24, 0xC0	; 192
 4b6:	08 95       	ret

000004b8 <__fp_pscA>:
 4b8:	00 24       	eor	r0, r0
 4ba:	0a 94       	dec	r0
 4bc:	16 16       	cp	r1, r22
 4be:	17 06       	cpc	r1, r23
 4c0:	18 06       	cpc	r1, r24
 4c2:	09 06       	cpc	r0, r25
 4c4:	08 95       	ret

000004c6 <__fp_pscB>:
 4c6:	00 24       	eor	r0, r0
 4c8:	0a 94       	dec	r0
 4ca:	12 16       	cp	r1, r18
 4cc:	13 06       	cpc	r1, r19
 4ce:	14 06       	cpc	r1, r20
 4d0:	05 06       	cpc	r0, r21
 4d2:	08 95       	ret

000004d4 <__fp_round>:
 4d4:	09 2e       	mov	r0, r25
 4d6:	03 94       	inc	r0
 4d8:	00 0c       	add	r0, r0
 4da:	11 f4       	brne	.+4      	; 0x4e0 <__fp_round+0xc>
 4dc:	88 23       	and	r24, r24
 4de:	52 f0       	brmi	.+20     	; 0x4f4 <__fp_round+0x20>
 4e0:	bb 0f       	add	r27, r27
 4e2:	40 f4       	brcc	.+16     	; 0x4f4 <__fp_round+0x20>
 4e4:	bf 2b       	or	r27, r31
 4e6:	11 f4       	brne	.+4      	; 0x4ec <__fp_round+0x18>
 4e8:	60 ff       	sbrs	r22, 0
 4ea:	04 c0       	rjmp	.+8      	; 0x4f4 <__fp_round+0x20>
 4ec:	6f 5f       	subi	r22, 0xFF	; 255
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	08 95       	ret

000004f6 <__fp_split3>:
 4f6:	57 fd       	sbrc	r21, 7
 4f8:	90 58       	subi	r25, 0x80	; 128
 4fa:	44 0f       	add	r20, r20
 4fc:	55 1f       	adc	r21, r21
 4fe:	59 f0       	breq	.+22     	; 0x516 <__fp_splitA+0x10>
 500:	5f 3f       	cpi	r21, 0xFF	; 255
 502:	71 f0       	breq	.+28     	; 0x520 <__fp_splitA+0x1a>
 504:	47 95       	ror	r20

00000506 <__fp_splitA>:
 506:	88 0f       	add	r24, r24
 508:	97 fb       	bst	r25, 7
 50a:	99 1f       	adc	r25, r25
 50c:	61 f0       	breq	.+24     	; 0x526 <__fp_splitA+0x20>
 50e:	9f 3f       	cpi	r25, 0xFF	; 255
 510:	79 f0       	breq	.+30     	; 0x530 <__fp_splitA+0x2a>
 512:	87 95       	ror	r24
 514:	08 95       	ret
 516:	12 16       	cp	r1, r18
 518:	13 06       	cpc	r1, r19
 51a:	14 06       	cpc	r1, r20
 51c:	55 1f       	adc	r21, r21
 51e:	f2 cf       	rjmp	.-28     	; 0x504 <__fp_split3+0xe>
 520:	46 95       	lsr	r20
 522:	f1 df       	rcall	.-30     	; 0x506 <__fp_splitA>
 524:	08 c0       	rjmp	.+16     	; 0x536 <__fp_splitA+0x30>
 526:	16 16       	cp	r1, r22
 528:	17 06       	cpc	r1, r23
 52a:	18 06       	cpc	r1, r24
 52c:	99 1f       	adc	r25, r25
 52e:	f1 cf       	rjmp	.-30     	; 0x512 <__fp_splitA+0xc>
 530:	86 95       	lsr	r24
 532:	71 05       	cpc	r23, r1
 534:	61 05       	cpc	r22, r1
 536:	08 94       	sec
 538:	08 95       	ret

0000053a <__fp_trunc>:
 53a:	e5 df       	rcall	.-54     	; 0x506 <__fp_splitA>
 53c:	a0 f0       	brcs	.+40     	; 0x566 <__fp_trunc+0x2c>
 53e:	be e7       	ldi	r27, 0x7E	; 126
 540:	b9 17       	cp	r27, r25
 542:	88 f4       	brcc	.+34     	; 0x566 <__fp_trunc+0x2c>
 544:	bb 27       	eor	r27, r27
 546:	9f 38       	cpi	r25, 0x8F	; 143
 548:	60 f4       	brcc	.+24     	; 0x562 <__fp_trunc+0x28>
 54a:	16 16       	cp	r1, r22
 54c:	b1 1d       	adc	r27, r1
 54e:	67 2f       	mov	r22, r23
 550:	78 2f       	mov	r23, r24
 552:	88 27       	eor	r24, r24
 554:	98 5f       	subi	r25, 0xF8	; 248
 556:	f7 cf       	rjmp	.-18     	; 0x546 <__fp_trunc+0xc>
 558:	86 95       	lsr	r24
 55a:	77 95       	ror	r23
 55c:	67 95       	ror	r22
 55e:	b1 1d       	adc	r27, r1
 560:	93 95       	inc	r25
 562:	96 39       	cpi	r25, 0x96	; 150
 564:	c8 f3       	brcs	.-14     	; 0x558 <__fp_trunc+0x1e>
 566:	08 95       	ret

00000568 <__fp_zero>:
 568:	e8 94       	clt

0000056a <__fp_szero>:
 56a:	bb 27       	eor	r27, r27
 56c:	66 27       	eor	r22, r22
 56e:	77 27       	eor	r23, r23
 570:	cb 01       	movw	r24, r22
 572:	97 f9       	bld	r25, 7
 574:	08 95       	ret

00000576 <__muluhisi3>:
 576:	0e 94 c6 02 	call	0x58c	; 0x58c <__umulhisi3>
 57a:	a5 9f       	mul	r26, r21
 57c:	90 0d       	add	r25, r0
 57e:	b4 9f       	mul	r27, r20
 580:	90 0d       	add	r25, r0
 582:	a4 9f       	mul	r26, r20
 584:	80 0d       	add	r24, r0
 586:	91 1d       	adc	r25, r1
 588:	11 24       	eor	r1, r1
 58a:	08 95       	ret

0000058c <__umulhisi3>:
 58c:	a2 9f       	mul	r26, r18
 58e:	b0 01       	movw	r22, r0
 590:	b3 9f       	mul	r27, r19
 592:	c0 01       	movw	r24, r0
 594:	a3 9f       	mul	r26, r19
 596:	01 d0       	rcall	.+2      	; 0x59a <__umulhisi3+0xe>
 598:	b2 9f       	mul	r27, r18
 59a:	70 0d       	add	r23, r0
 59c:	81 1d       	adc	r24, r1
 59e:	11 24       	eor	r1, r1
 5a0:	91 1d       	adc	r25, r1
 5a2:	08 95       	ret

000005a4 <_exit>:
 5a4:	f8 94       	cli

000005a6 <__stop_program>:
 5a6:	ff cf       	rjmp	.-2      	; 0x5a6 <__stop_program>
